cluster_name: default
min_workers: 0
max_workers: 5
upscaling_speed: 1.0
idle_timeout_minutes: 5

provider:
  type: kubernetes

  # Exposing external IP addresses for ray pods isn't currently supported.
  use_internal_ips: true

  # Namespace to use for all resources created.
  namespace: ray

  autoscaler_service_account:
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: autoscaler

  autoscaler_role:
    kind: Role
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: autoscaler
    rules:
      - apiGroups: [""]
        resources: ["pods", "pods/status", "pods/exec"]
        verbs: ["get", "watch", "list", "create", "delete", "patch"]

  autoscaler_role_binding:
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: autoscaler
    subjects:
      - kind: ServiceAccount
        name: autoscaler
    roleRef:
      kind: Role
      name: autoscaler
      apiGroup: rbac.authorization.k8s.io

  services:
    # Service that maps to the head node of the Ray cluster.
    - apiVersion: v1
      kind: Service
      metadata:
        name: ray-head
      spec:
        selector:
          component: ray-head
        ports:
          - protocol: TCP
            port: 8000
            targetPort: 8000

    # Service that maps to the worker nodes of the Ray cluster.
    - apiVersion: v1
      kind: Service
      metadata:
        name: ray-workers
      spec:
        selector:
          component: ray-worker
        ports:
          - protocol: TCP
            port: 8000
            targetPort: 8000

# Kubernetes pod config for the head node pod.
head_node:
  apiVersion: v1
  kind: Pod
  metadata:
    generateName: ray-head-
    labels:
      component: ray-head
  spec:
    serviceAccountName: autoscaler
    restartPolicy: Never
    volumes:
      - name: dshm
        emptyDir:
          medium: Memory

    containers:
      - name: ray-node
        imagePullPolicy: Always
        image: rayproject/ray:nightly-py38
        command: ["/bin/bash", "-c", "--"]
        args: ["trap : TERM INT; sleep infinity & wait;"]
        ports:
          - containerPort: 6379 # Redis port.
          - containerPort: 6380 # Redis port.
          - containerPort: 6381 # Redis port.
          - containerPort: 12345 # Ray internal communication.
          - containerPort: 12346 # Ray internal communication.
        volumeMounts:
          - mountPath: /dev/shm
            name: dshm
        resources:
          requests:
            cpu: 5
            memory: 512Mi
          limits:
            memory: 2Gi
        env:
          - name: MY_CPU_REQUEST
            valueFrom:
              resourceFieldRef:
                resource: requests.cpu

# Kubernetes pod config for worker node pods.
worker_nodes:
  apiVersion: v1
  kind: Pod
  metadata:
    generateName: ray-worker-
    labels:
      component: ray-worker
  spec:
    serviceAccountName: default
    restartPolicy: Never
    volumes:
      - name: dshm
        emptyDir:
          medium: Memory

    containers:
      - name: ray-node
        imagePullPolicy: Always
        image: rayproject/ray:nightly-py38
        command: ["/bin/bash", "-c", "--"]
        args: ["trap : TERM INT; sleep infinity & wait;"]
        ports:
          - containerPort: 12345 # Ray internal communication.
          - containerPort: 12346 # Ray internal communication.

        volumeMounts:
          - mountPath: /dev/shm
            name: dshm
        resources:
          requests:
            cpu: 5
            memory: 512Mi
          limits:
            memory: 2Gi
        env:
          - name: MY_CPU_REQUEST
            valueFrom:
              resourceFieldRef:
                resource: requests.cpu

file_mounts:
  {
    "~/rayvens": "/Users/dorubercea/R/events/rayvens",
    "~/anaconda3/bin/kamel": "/Users/dorubercea/K/CAMEL-K/kamel_linux_64bit/kamel",
  }

cluster_synced_files: []
file_mounts_sync_continuously: False
initialization_commands:
  ["kamel install -n ray --registry registry:5000 --registry-insecure --force"]

setup_commands:
  [
    "cd ~/rayvens/ ; sudo /home/ray/anaconda3/bin/pip install -e . -v ; cd -",
  ]

head_setup_commands: []
worker_setup_commands: []
head_start_ray_commands:
  - ray stop
  - ulimit -n 65536; ray start --head --num-cpus=$MY_CPU_REQUEST --port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml --dashboard-host 0.0.0.0

worker_start_ray_commands:
  - ray stop
  - ulimit -n 65536; ray start --num-cpus=$MY_CPU_REQUEST --address=$RAY_HEAD_IP:6379 --object-manager-port=8076
